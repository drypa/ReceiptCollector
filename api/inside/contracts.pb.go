// Code generated by protoc-gen-go. DO NOT EDIT.
// source: contracts.proto

package inside_api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NoParams struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NoParams) Reset()         { *m = NoParams{} }
func (m *NoParams) String() string { return proto.CompactTextString(m) }
func (*NoParams) ProtoMessage()    {}
func (*NoParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6d125f880f9ca35, []int{0}
}

func (m *NoParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NoParams.Unmarshal(m, b)
}
func (m *NoParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NoParams.Marshal(b, m, deterministic)
}
func (m *NoParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NoParams.Merge(m, src)
}
func (m *NoParams) XXX_Size() int {
	return xxx_messageInfo_NoParams.Size(m)
}
func (m *NoParams) XXX_DiscardUnknown() {
	xxx_messageInfo_NoParams.DiscardUnknown(m)
}

var xxx_messageInfo_NoParams proto.InternalMessageInfo

func init() {
	proto.RegisterType((*NoParams)(nil), "inside_api.NoParams")
}

func init() { proto.RegisterFile("contracts.proto", fileDescriptor_b6d125f880f9ca35) }

var fileDescriptor_b6d125f880f9ca35 = []byte{
	// 240 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0xcf, 0x4a, 0x03, 0x31,
	0x10, 0x87, 0x05, 0x41, 0xcb, 0x58, 0x2a, 0x04, 0x4f, 0xf1, 0x1f, 0x54, 0xcf, 0x7b, 0xd0, 0x17,
	0xb0, 0x20, 0x14, 0xa1, 0x4a, 0x59, 0xf0, 0xe4, 0x41, 0x62, 0x76, 0x28, 0x83, 0x3a, 0x89, 0x99,
	0xe9, 0x93, 0xf8, 0xc2, 0xe2, 0xd6, 0xec, 0x46, 0x59, 0x7b, 0xdc, 0xf9, 0x3e, 0x3e, 0x7e, 0x4b,
	0xe0, 0xd0, 0x07, 0xd6, 0xe4, 0xbc, 0x4a, 0x15, 0x53, 0xd0, 0x60, 0x80, 0x58, 0xa8, 0xc1, 0x67,
	0x17, 0xc9, 0x4e, 0x12, 0x7a, 0xa4, 0x98, 0x99, 0x9d, 0x38, 0xef, 0xc3, 0x9a, 0xf3, 0xf7, 0x14,
	0x60, 0xf4, 0x10, 0x96, 0x2e, 0xb9, 0x77, 0xb9, 0xfa, 0xdc, 0x85, 0x83, 0x3b, 0x56, 0x4c, 0xec,
	0xde, 0x66, 0x91, 0xcc, 0x12, 0xc6, 0x73, 0xd4, 0x45, 0x58, 0x11, 0x2f, 0x88, 0x5f, 0xcd, 0x79,
	0xd5, 0x87, 0xab, 0x92, 0xd4, 0xf8, 0xb1, 0x46, 0x51, 0x7b, 0x5a, 0x0a, 0x05, 0x95, 0x18, 0x58,
	0x70, 0xba, 0x63, 0xee, 0x01, 0x66, 0x4d, 0x53, 0x6f, 0x26, 0x99, 0x5f, 0x7a, 0x7f, 0xcf, 0xb5,
	0xb3, 0xff, 0x70, 0x97, 0xbb, 0x81, 0xd1, 0x1c, 0xf5, 0x51, 0x30, 0x89, 0x39, 0x2a, 0xed, 0xfc,
	0x4b, 0xf6, 0xe4, 0xcf, 0xe4, 0xd6, 0x2d, 0x0a, 0xb7, 0xb0, 0xff, 0x73, 0x35, 0x76, 0x40, 0xcd,
	0x53, 0x8e, 0x07, 0x59, 0x57, 0x79, 0x82, 0x71, 0x8d, 0x2b, 0x12, 0xc5, 0xd4, 0xa6, 0x2e, 0x4a,
	0x7d, 0xe3, 0x7e, 0xd3, 0xe4, 0x94, 0x02, 0xe7, 0xe6, 0xe5, 0x76, 0x29, 0xc7, 0x5f, 0xf6, 0xda,
	0x87, 0xba, 0xfe, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x08, 0xae, 0x60, 0x61, 0xe7, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// InternalApiClient is the client API for InternalApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InternalApiClient interface {
	GetLoginLink(ctx context.Context, in *GetLoginLinkRequest, opts ...grpc.CallOption) (*LoginLinkResponse, error)
	AddReceipt(ctx context.Context, in *AddReceiptRequest, opts ...grpc.CallOption) (*AddReceiptResponse, error)
	GetUsers(ctx context.Context, in *NoParams, opts ...grpc.CallOption) (*GetUsersResponse, error)
	GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*GetUserResponse, error)
	RegisterUser(ctx context.Context, in *UserRegistrationRequest, opts ...grpc.CallOption) (*UserRegistrationResponse, error)
}

type internalApiClient struct {
	cc grpc.ClientConnInterface
}

func NewInternalApiClient(cc grpc.ClientConnInterface) InternalApiClient {
	return &internalApiClient{cc}
}

func (c *internalApiClient) GetLoginLink(ctx context.Context, in *GetLoginLinkRequest, opts ...grpc.CallOption) (*LoginLinkResponse, error) {
	out := new(LoginLinkResponse)
	err := c.cc.Invoke(ctx, "/inside_api.InternalApi/GetLoginLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalApiClient) AddReceipt(ctx context.Context, in *AddReceiptRequest, opts ...grpc.CallOption) (*AddReceiptResponse, error) {
	out := new(AddReceiptResponse)
	err := c.cc.Invoke(ctx, "/inside_api.InternalApi/AddReceipt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalApiClient) GetUsers(ctx context.Context, in *NoParams, opts ...grpc.CallOption) (*GetUsersResponse, error) {
	out := new(GetUsersResponse)
	err := c.cc.Invoke(ctx, "/inside_api.InternalApi/GetUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalApiClient) GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*GetUserResponse, error) {
	out := new(GetUserResponse)
	err := c.cc.Invoke(ctx, "/inside_api.InternalApi/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *internalApiClient) RegisterUser(ctx context.Context, in *UserRegistrationRequest, opts ...grpc.CallOption) (*UserRegistrationResponse, error) {
	out := new(UserRegistrationResponse)
	err := c.cc.Invoke(ctx, "/inside_api.InternalApi/RegisterUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InternalApiServer is the server API for InternalApi service.
type InternalApiServer interface {
	GetLoginLink(context.Context, *GetLoginLinkRequest) (*LoginLinkResponse, error)
	AddReceipt(context.Context, *AddReceiptRequest) (*AddReceiptResponse, error)
	GetUsers(context.Context, *NoParams) (*GetUsersResponse, error)
	GetUser(context.Context, *GetUserRequest) (*GetUserResponse, error)
	RegisterUser(context.Context, *UserRegistrationRequest) (*UserRegistrationResponse, error)
}

// UnimplementedInternalApiServer can be embedded to have forward compatible implementations.
type UnimplementedInternalApiServer struct {
}

func (*UnimplementedInternalApiServer) GetLoginLink(ctx context.Context, req *GetLoginLinkRequest) (*LoginLinkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLoginLink not implemented")
}
func (*UnimplementedInternalApiServer) AddReceipt(ctx context.Context, req *AddReceiptRequest) (*AddReceiptResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddReceipt not implemented")
}
func (*UnimplementedInternalApiServer) GetUsers(ctx context.Context, req *NoParams) (*GetUsersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUsers not implemented")
}
func (*UnimplementedInternalApiServer) GetUser(ctx context.Context, req *GetUserRequest) (*GetUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}
func (*UnimplementedInternalApiServer) RegisterUser(ctx context.Context, req *UserRegistrationRequest) (*UserRegistrationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterUser not implemented")
}

func RegisterInternalApiServer(s *grpc.Server, srv InternalApiServer) {
	s.RegisterService(&_InternalApi_serviceDesc, srv)
}

func _InternalApi_GetLoginLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLoginLinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalApiServer).GetLoginLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inside_api.InternalApi/GetLoginLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalApiServer).GetLoginLink(ctx, req.(*GetLoginLinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalApi_AddReceipt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddReceiptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalApiServer).AddReceipt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inside_api.InternalApi/AddReceipt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalApiServer).AddReceipt(ctx, req.(*AddReceiptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalApi_GetUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NoParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalApiServer).GetUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inside_api.InternalApi/GetUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalApiServer).GetUsers(ctx, req.(*NoParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalApi_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalApiServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inside_api.InternalApi/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalApiServer).GetUser(ctx, req.(*GetUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _InternalApi_RegisterUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRegistrationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InternalApiServer).RegisterUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inside_api.InternalApi/RegisterUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InternalApiServer).RegisterUser(ctx, req.(*UserRegistrationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _InternalApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "inside_api.InternalApi",
	HandlerType: (*InternalApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetLoginLink",
			Handler:    _InternalApi_GetLoginLink_Handler,
		},
		{
			MethodName: "AddReceipt",
			Handler:    _InternalApi_AddReceipt_Handler,
		},
		{
			MethodName: "GetUsers",
			Handler:    _InternalApi_GetUsers_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _InternalApi_GetUser_Handler,
		},
		{
			MethodName: "RegisterUser",
			Handler:    _InternalApi_RegisterUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "contracts.proto",
}
